#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 2019 Joyent, Inc.
#
#
# Usage: manta_gw_ping <zonename>
#
# This is intended to run as a cmon-agent plugin in order to ping the default
# gateway for all running zones on the system.
#

ALIVE_PATTERN=" is alive$"
DEAD_PATTERN="^no answer from "
IP_PATTERN="^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"
ZLOGIN_DOWN_PATTERN="^zlogin: login allowed only to running zones"

zonename=$1

if [[ -z $zonename ]]; then
    echo "Usage: $0 <zonename>" >&2
    exit 1
fi

#
# Here we grab either the default gateway or an error message. The route command
# will tell us if the zone is not running. And when the zone has no default
# gateway, it will return an empty result. In any other case we expect the
# result to be an IP or the stderr of `route` which we'll treat as a fatal error
# since we don't know how to handle it.
#
gateway=$((route -z $zonename -n get default | awk '$1 == "gateway:" {print $2}') 2>&1)
if [[ -z $gateway ]]; then
    echo "Zone $zonename has no default gateway, skipping." >&2
    exit 0
elif [[ $gateway == "route: zone must be running" ]]; then
    echo "Zone $zonename is not running, skipping." >&2
    exit 0
elif [[ ! $gateway =~ $IP_PATTERN ]]; then
    echo "Unexpected error finding gateway: '$gateway'" >&2
    exit 2
fi

result=""

#
# On both macOS and Linux (iputils) it is possible to do what we want to do
# with:
#
#   ping -c 1 -W 1 <host>
#
# which would also allow us to get the response time of the gateway here.
# Unfortunately the way the options work on SmartOS ping this seems to be
# impossible. You can only specify a timeout if you have not also used
# "statistics" mode which is what provides the response time. So if you want
# a timeout you can't have response time. Because of this deficiency, we can
# only return whether the gateway was up or not and cannot include the
# response time.
#
ping_result=$(zlogin $zonename /usr/sbin/ping $gateway 1 2>&1)
if [[ $ping_result =~ $ALIVE_PATTERN ]]; then
    result="1"
elif [[ $ping_result =~ $DEAD_PATTERN ]]; then
    result="0"
elif [[ $ping_result =~ $ZLOGIN_DOWN_PATTERN ]]; then
    #
    # If we failed to zlogin here, the zone was up when we checked the routes
    # so it must have *just* stopped. Nothing we can do but skip.
    #
    echo "Zone $zonename stopped while pinging, skipping." >&2
    exit 0
else
    echo "Uexpected error pinging gateway: '$ping_result'" >&2
    exit 3
fi

#
# We set the TTL to 5m (300s) since what we really care about is zones where
# networking is broken for an extended period of time rather than zones that
# just have blips.
#
cat <<EOF
ttl	option	300
reachable	gauge	$result	Indicates whether the default gw is reachable via ICMP ping (1) or not (0).
EOF

exit 0
